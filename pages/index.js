import React, { useState} from 'react';
import Head from 'next/head';
import styled from 'styled-components';
import { Logo, Car, Gear, HomeCommand } from '../icons';
import { motion } from 'framer-motion';
import ReactModal from 'react-modal';
import Link from 'next/link';

const Home = () => {
  const [isConnected, setIsConnected] = useState(false);
  const [paired_devices, setDevices] = useState([]);
  const [initialized, setInitialized] = useState(false);
  const [settings, setSettings] = useState(false);

  const serviceUUID = 0xFFE0;
  const charUUID = 0xAAA0;
  let device, chosenService = null, sendCharacteristic, receiveCharacteristic;

  const openSettings = () => {
    setSettings(true);
  };

  const closeSettings = () => {
    setSettings(false);
  };

  const pairCar = (car) => {
    device = car
    if (device.gatt) {
      console.log("connected");
    device.gatt.connect();
    }
  }

  const sendCommand = (command) => {
    console.log(sendCharacteristic);
  }

  function onGetBluetoothDevicesButtonClick() {
    console.log('Getting existing permitted Bluetooth devices...');

    navigator.bluetooth.getDevices()
      .then(devices => {
        console.log('> Got ' + devices.length + ' Bluetooth devices.');
        for (const device of devices) {
          console.log('  > ' + device.name + ' (' + device.id + ')');
        }
        setDevices(devices)
      }).then(

      )
      .catch(error => {
        console.log('Argh! ' + error);
      });
  }

  function onRequestBluetoothDeviceButtonClick() {
    console.log('Requesting any Bluetooth device...');
    navigator.bluetooth.requestDevice({
      filters: [{ services: [serviceUUID] }]
    })
      .then(device => {
        console.log('> Requested ' + device.name + ' (' + device.id + ')');
        setInitialized(true);
      }).catch(error => {
        console.log('Argh! ' + error);
      });
  }


  return (
    <HomeWrap>
      <Head>
        <title>EVEE</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="theme-color" content="#000" />
        <link rel="manifest" href="/manifest.json" />
        <link rel="icon" href="/icon-192x192.png" />
        <link rel="apple-touch-icon" href="/icon-192x192.png" />
      </Head>
      <HomeHeader>
        <motion.div whileTap={{ scale: 1.2 }} whileHover={{ scale: 1.1 }}>
          <GearIcon onClick={openSettings} />
        </motion.div>
      </HomeHeader>

      <ReactModal
        isOpen={settings}
        onRequestClose={closeSettings}
        ariaHideApp={false}
        contentLabel="Selected Option"
        style={{
          overlay: {
            backgroundColor: 'rgba(0,0,0,0.3)'
          },
          content: {
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            backgroundColor: 'white',
            border: 'none',
            borderRadius: '1em',
            height: '60vh',
            width: '80vh',
            left: '50%',
            top: '50%',
            right: '0',
            bottom: '0',
            transform: 'translate(-50%, -50%)'
          }
        }
        }
      >
        <motion.div whileTap={{ scale: 1.2 }} whileHover={{ scale: 1.1 }}>
          <InitDevices onClick={() => { onRequestBluetoothDeviceButtonClick() }}> Initialize Devices </InitDevices>
        </motion.div>

      </ReactModal>

      <motion.div whileTap={{ scale: 1.2 }} whileHover={{ scale: 1.1 }}>
        <Button onClick={() => { onGetBluetoothDevicesButtonClick(); }} />
      </motion.div>

      {!isConnected && paired_devices.map((car, i) => {
        return (
          <motion.div key={car.name} whileTap={{ scale: 1.2 }} whileHover={{ scale: 1.1 }}>
            <CarSelect carColor={colors[i]} onClick={() => { pairCar(car); }} />
          </motion.div>
        )
      })}

      {isConnected &&
        <motion.div whileTap={{ scale: 1.2 }} whileHover={{ scale: 1.1 }}>
          <SendHome onClick={() => { sendCommand('home'); }} />
        </motion.div>}

    </HomeWrap>
  )
}

const HomeWrap = styled.div`
  height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background-color: #000;
`;

const HomeHeader = styled.div`
  position: absolute;
  left: 0;
  top: 2vh;
`

const Button = styled(Logo)`
  height: 50vh;
`;

const InitDevices = styled.button`
  color: white;
  background-color: blue;
  border-radius: 1em;
  padding: 1em;
`;
const CarSelect = styled(Car)`
  height: 20vh;
  path {fill: ${({ carColor }) => carColor ? carColor : 'white'};}
`;

const GearIcon = styled(Gear)`
  width: 100px;
`;


const SendHome = styled(HomeCommand)`
    height: 20vh;
`;


const colors = ['red', 'blue', 'green', 'purple'];



export default Home;